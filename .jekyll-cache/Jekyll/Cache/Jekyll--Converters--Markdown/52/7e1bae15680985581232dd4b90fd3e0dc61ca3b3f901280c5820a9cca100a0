I"Z<p>Have you ever needed to query a machine for a port but not sure what process is using that port? Here is a simple way to find that information out.</p>

<!--more-->

<h2 id="setting-the-stage">Setting the stage</h2>

<p>To get started we need to look at a few PowerShell commands: <a href="https://docs.microsoft.com/en-us/powershell/module/microsoft.powershell.management/get-process">Get-Process</a> and <a href="https://docs.microsoft.com/en-us/powershell/module/nettcpip/get-nettcpconnection">Get-NetTCPConnection</a></p>

<p>Let’s start with <code class="highlighter-rouge">Get-Process</code> by running <code class="highlighter-rouge">Get-Process | Select -First 5</code>. You will see quite a bit of information, what we’ll be interested in is the <code class="highlighter-rouge">Id</code> and <code class="highlighter-rouge">ProcessName</code>.</p>

<p>Next lets run <code class="highlighter-rouge">Get-NetTCPConnection | Select -First 5</code>. We’ll now see some important properties: <code class="highlighter-rouge">LocalPort</code> and <code class="highlighter-rouge">OwningProcess</code>.</p>

<h2 id="closer-investigation">Closer Investigation</h2>

<p>With PowerShell what we see with the initial output is not all of the values that module exports to the screen for you. Try running <code class="highlighter-rouge">Get-NetTCPConnection | Select * -First 1</code>. Take note of the <code class="highlighter-rouge">OwningProcess</code> Property. We’ll use this later. So we can specify a port to query for a port by using the <code class="highlighter-rouge">-LocalPort</code> property. On my machine I an running my Jekyll server to check my website and it runs on Port 4000. Let’s try <code class="highlighter-rouge">Get-NetTCPConnection -LocalPort 4000</code>. I can see the <code class="highlighter-rouge">OwningProcess</code> is currently 19124.</p>

<p>So what’s next? Lets see what the <code class="highlighter-rouge">Get-Process</code> can give us. With this module we can query by the <code class="highlighter-rouge">-Id</code>: <code class="highlighter-rouge">Get-Process -Id 19124</code> and we’ll see the <code class="highlighter-rouge">ProcessName</code> will be ruby. This makes sense as Jekyll runs off Ruby!</p>

<h2 id="putting-it-together">Putting it together</h2>

<p>PowerShell has a nice way to select the property value you are after by wrapping the command in parenthesis and specifying the value. For instance, let’s get the <code class="highlighter-rouge">OwningProcess</code> from the port we’re looking for.</p>

<p>Running <code class="highlighter-rouge">(Get-NetTCPConnection -Port 4000).OwningProcess</code> will select just the Owning Process. We can then see the process ID and pass that to <code class="highlighter-rouge">Get-Process</code>.</p>

<p>All together now!</p>

<div class="language-powershell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$port</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="mi">4000</span><span class="w">

</span><span class="p">(</span><span class="n">Get-Process</span><span class="w"> </span><span class="nt">-ID</span><span class="w"> </span><span class="p">(</span><span class="n">Get-NetTCPConnection</span><span class="w"> </span><span class="nt">-LocalPort</span><span class="w"> </span><span class="nv">$port</span><span class="w"> </span><span class="nt">-ErrorAction</span><span class="w"> </span><span class="nx">SilentlyContinue</span><span class="p">)</span><span class="o">.</span><span class="nf">OwningProcess</span><span class="p">)</span><span class="o">.</span><span class="nf">ProcessName</span><span class="w">
</span></code></pre></div></div>

<p>The Error Action is SilentlyContinue just incase the port we are looking at isn’t found. We’re using the <code class="highlighter-rouge">Get-Process</code> command and specifying the process id, but embedding the <code class="highlighter-rouge">Get-NetTCPConnection</code> output as the ID value.</p>

<p>After all of this, we can wrap this up in a function and make use of <code class="highlighter-rouge">Read-Host</code> to get some user input.</p>

<div class="language-powershell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kr">function</span><span class="w"> </span><span class="nf">Get-PortProcess</span><span class="w"> </span><span class="p">{</span><span class="w">

    </span><span class="kr">Param</span><span class="w">
    </span><span class="p">(</span><span class="w">
         </span><span class="p">[</span><span class="n">Parameter</span><span class="p">(</span><span class="n">Mandatory</span><span class="o">=</span><span class="bp">$true</span><span class="p">,</span><span class="w"> </span><span class="n">Position</span><span class="o">=</span><span class="mi">0</span><span class="p">)]</span><span class="w">
         </span><span class="p">[</span><span class="n">int</span><span class="p">]</span><span class="w"> </span><span class="nv">$port</span><span class="w">
    </span><span class="p">)</span><span class="w">
        
    </span><span class="kr">try</span><span class="p">{</span><span class="w">
        </span><span class="nv">$process</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="p">(</span><span class="n">get-process</span><span class="w"> </span><span class="nt">-ID</span><span class="w"> </span><span class="p">(</span><span class="n">Get-NetTCPConnection</span><span class="w"> </span><span class="nt">-LocalPort</span><span class="w"> </span><span class="nv">$port</span><span class="w"> </span><span class="nt">-ErrorAction</span><span class="w"> </span><span class="nx">SilentlyContinue</span><span class="p">)</span><span class="o">.</span><span class="nf">OwningProcess</span><span class="p">)</span><span class="o">.</span><span class="nf">ProcessName</span><span class="w"> 
        
        </span><span class="n">Write-Host</span><span class="w"> </span><span class="s2">"</span><span class="nv">$process</span><span class="s2"> is using port </span><span class="nv">$port</span><span class="s2">"</span><span class="w">
    </span><span class="p">}</span><span class="w">
    </span><span class="kr">catch</span><span class="p">{</span><span class="w">
        </span><span class="n">write-Host</span><span class="w"> </span><span class="s2">"Cannot find anything on the port </span><span class="nv">$port</span><span class="s2">"</span><span class="w">
    </span><span class="p">}</span><span class="w">
</span><span class="p">}</span><span class="w">

</span><span class="kr">while</span><span class="p">(</span><span class="bp">$true</span><span class="p">){</span><span class="w">
    </span><span class="nv">$port</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">Read-Host</span><span class="w"> </span><span class="s2">"What port are you looking for?"</span><span class="w">
    </span><span class="n">Get-PortProcess</span><span class="w"> </span><span class="nv">$port</span><span class="w">
</span><span class="p">}</span><span class="w">
</span></code></pre></div></div>

<p>Hope this helps you!</p>
:ET