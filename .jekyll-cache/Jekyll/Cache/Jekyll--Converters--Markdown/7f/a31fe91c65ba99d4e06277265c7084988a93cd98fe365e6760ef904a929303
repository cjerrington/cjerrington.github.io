I"c<p>Wakey is a Python program to help keep a computer screen active by pressing a virtual key on a timer. It keeps the computer awake by simulating a F15 keyboard press and release.</p>

<!--more-->

<p>Default key press is currently 1 minute. There are arguments to change the frequency as well.</p>

<p>Currently tested on Windows 10 and Ubuntu 20.10 (Groovy Gorilla), but no reason it should not work on other operating systems that have Python 3.6+ installed.</p>

<h2 id="setup">Setup</h2>

<p>To setup and start using Wakey, just download the <a href="https://github.com/cjerrington/wakey/releases/latest">Latest Release</a> and then install the dependencies.</p>

<div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code>pip <span class="nb">install</span> <span class="nt">-r</span> requirements.txt
</code></pre></div></div>

<p>You can install this in a virtual environment as well, which is what Iâ€™d prefer. To get started runâ€¦</p>

<div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code>pip <span class="nb">install </span>virtualenv
virtualenv <span class="nb">.</span>
scripts<span class="se">\a</span>ctivate
pip <span class="nb">install</span> <span class="nt">-r</span> requirements.txt
python wakey.py
</code></pre></div></div>

<h2 id="arguments">Arguments</h2>

<p>Wakey has a few arguments you can use to adjust the settings.</p>

<table>
  <thead>
    <tr>
      <th>Command</th>
      <th>Explanation</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>-f, â€“frequency</td>
      <td>Used for the frequency of the keypress in minutes. Default is 1 minute.</td>
    </tr>
    <tr>
      <td>-v, â€“verbose</td>
      <td>To see the output of the keypress in the console. Default is false.</td>
    </tr>
    <tr>
      <td>-l, â€“log</td>
      <td>Create a log of the application to see when the events happened. Default is false</td>
    </tr>
  </tbody>
</table>

<h2 id="usage">Usage</h2>

<p>Wakey will run with no arguments given and use the default settings. On windows this is the F15 key and every 1 minute. On Linux we need to run <code class="highlighter-rouge">wakey.py</code> as a root user. To avoid depending on X, the Linux parts reads raw device files (/dev/input/input*) but this requires root. Part of the <a href="https://pypi.org/project/keyboard/">known limitations</a> for the keyboard module.</p>

<p>On Linux Wakey uses the shift key and on Windows Wakey uses the function 15 key (F15).</p>

<h3 id="example">Example</h3>

<p>This will run Wakey with a keypress every 2 minutes showing the output to the screen and create log file</p>

<div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code>python wakey.py <span class="nt">-f</span> 2 <span class="nt">-v</span> <span class="nt">-l</span>
</code></pre></div></div>

<p>The log file will be created in the same directory as Wakey.</p>

<h2 id="building">Building</h2>

<p>You can compile Wakey to an executable (tested on Windows 10).
There is the built in <code class="highlighter-rouge">build.bat</code> file which uses <code class="highlighter-rouge">pyinstaller</code></p>

<div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code>pyinstaller <span class="nt">--onefile</span> <span class="nt">--icon</span><span class="o">=</span>sun.ico <span class="nt">--version-file</span><span class="o">=</span>version.txt wakey.py
</code></pre></div></div>

<p>This step has already been done for you and you can find the compiled version <a href="https://github.com/cjerrington/wakey/releases/latest">here</a>.</p>
:ET