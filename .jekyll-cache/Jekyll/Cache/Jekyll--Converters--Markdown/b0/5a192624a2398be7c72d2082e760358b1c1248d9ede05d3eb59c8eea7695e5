I"3@<h2 id="setting-up-the-basics">Setting up the basics</h2>

<p>For the first item in our beginner series we’d like to talk about random password generating. This will allow us to see how to import modules, use functions, and generate some arguments for our script. All common things we’d like to use when creating then distributing the script to others and allow a fluid option in the script.</p>

<!--more-->

<p>To begin, what we need:</p>

<ul>
  <li>random</li>
  <li>string</li>
</ul>

<p>We start by import the modules we need.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="nn">random</span>
<span class="kn">import</span> <span class="nn">string</span>
</code></pre></div></div>

<p>I want to build our code that will create our password into a function. To do so we define our function with <code class="highlighter-rouge">def</code> and then the name like so:</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">def</span> <span class="nf">randPass</span><span class="p">():</span>
</code></pre></div></div>

<p>Next we need to create our password character string. The <code class="highlighter-rouge">string</code> module gives us the ability to get a collection of the letters, numbers and punctuation.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">password_characters</span> <span class="o">=</span> <span class="n">string</span><span class="p">.</span><span class="n">ascii_letters</span> <span class="o">+</span> <span class="n">string</span><span class="p">.</span><span class="n">digits</span> <span class="o">+</span> <span class="n">string</span><span class="p">.</span><span class="n">punctuation</span>
</code></pre></div></div>

<p>This variable puts all the possible characters we will use together in one variable. Next we will need to return our function for the final output.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">return</span> <span class="s">''</span><span class="p">.</span><span class="n">join</span><span class="p">(</span><span class="n">random</span><span class="p">.</span><span class="n">choice</span><span class="p">(</span><span class="n">password_characters</span><span class="p">)</span> <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="n">length</span><span class="p">))</span>
</code></pre></div></div>

<p>We start with a blank string and join it with <code class="highlighter-rouge">random.choice</code> to choose our password characters for the length of our password defined by length. Lets add this variable to our function so we can pass this value along later dynamically in a way. At our <code class="highlighter-rouge">randPass()</code> function lets add <code class="highlighter-rouge">length</code> to the function like so:</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">def</span> <span class="nf">randPass</span><span class="p">(</span><span class="n">length</span><span class="p">):</span>
</code></pre></div></div>

<p>Our full randPass.py script so far should look like so:</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="nn">random</span>
<span class="kn">import</span> <span class="nn">string</span>

<span class="k">def</span> <span class="nf">randPass</span><span class="p">(</span><span class="n">length</span><span class="o">=</span><span class="mi">8</span><span class="p">):</span>
    <span class="n">password_characters</span> <span class="o">=</span> <span class="n">string</span><span class="p">.</span><span class="n">ascii_letters</span> <span class="o">+</span> <span class="n">string</span><span class="p">.</span><span class="n">digits</span> <span class="o">+</span> <span class="n">string</span><span class="p">.</span><span class="n">punctuation</span>
    <span class="k">return</span> <span class="s">''</span><span class="p">.</span><span class="n">join</span><span class="p">(</span><span class="n">random</span><span class="p">.</span><span class="n">choice</span><span class="p">(</span><span class="n">password_characters</span><span class="p">)</span> <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="n">length</span><span class="p">))</span>
</code></pre></div></div>

<p>Now we just need to call our function outside of the <code class="highlighter-rouge">def</code> and we can get a random string which we can use for a password. By setting <code class="highlighter-rouge">length=8</code> in our function we are giving it a default value. Now we can run our function like so</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># generate an 8 character string
</span><span class="n">randPass</span><span class="p">()</span>

<span class="c1"># generate a 15 character string
</span><span class="n">randPass</span><span class="p">(</span><span class="mi">15</span><span class="p">)</span>
</code></pre></div></div>

<h2 id="adding-some-command-line-arguments">Adding some command line arguments</h2>

<p>So what is all the code and what does this line mean?</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">if</span> <span class="n">__name__</span> <span class="o">==</span> <span class="s">"__main__"</span><span class="p">:</span>
</code></pre></div></div>

<p>If the script is called directly we will run some additional code and run our main process. For now we want to import <code class="highlighter-rouge">argparse</code> and setup some arguments. In doing so we’ll also need to update our main <code class="highlighter-rouge">randPass()</code> function.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code>    <span class="kn">import</span> <span class="nn">argparse</span>
    <span class="n">parser</span> <span class="o">=</span> <span class="n">argparse</span><span class="p">.</span><span class="n">ArgumentParser</span><span class="p">(</span><span class="n">description</span><span class="o">=</span><span class="s">"Random Password Generator"</span><span class="p">)</span>
    <span class="n">parser</span><span class="p">.</span><span class="n">add_argument</span><span class="p">(</span><span class="s">"-l"</span><span class="p">,</span> <span class="s">"--length"</span><span class="p">,</span> <span class="nb">type</span><span class="o">=</span><span class="nb">int</span><span class="p">,</span> <span class="n">help</span><span class="o">=</span><span class="s">"Length of password in integer, default is 14"</span><span class="p">,</span> <span class="n">default</span><span class="o">=</span><span class="mi">14</span><span class="p">)</span>
    <span class="n">parser</span><span class="p">.</span><span class="n">add_argument</span><span class="p">(</span><span class="s">"-n"</span><span class="p">,</span> <span class="s">"--numbers"</span><span class="p">,</span> <span class="n">action</span><span class="o">=</span><span class="s">'store_true'</span><span class="p">,</span> <span class="n">help</span><span class="o">=</span><span class="s">"Add numbers to password"</span><span class="p">)</span>
    <span class="n">parser</span><span class="p">.</span><span class="n">add_argument</span><span class="p">(</span><span class="s">"-a"</span><span class="p">,</span> <span class="s">"--alpha"</span><span class="p">,</span> <span class="n">action</span><span class="o">=</span><span class="s">'store_true'</span><span class="p">,</span>  <span class="n">help</span><span class="o">=</span><span class="s">"Add mixed case alpha characters to password"</span><span class="p">)</span>
    <span class="n">parser</span><span class="p">.</span><span class="n">add_argument</span><span class="p">(</span><span class="s">"-p"</span><span class="p">,</span> <span class="s">"--punctuation"</span><span class="p">,</span> <span class="n">action</span><span class="o">=</span><span class="s">'store_true'</span><span class="p">,</span> <span class="n">help</span><span class="o">=</span><span class="s">"Add punctuation characters to password"</span><span class="p">)</span>
    <span class="n">parser</span><span class="p">.</span><span class="n">add_argument</span><span class="p">(</span><span class="s">"-c"</span><span class="p">,</span> <span class="s">"--count"</span><span class="p">,</span> <span class="nb">type</span><span class="o">=</span><span class="nb">int</span><span class="p">,</span> <span class="n">help</span><span class="o">=</span><span class="s">"Number of passwords to generate"</span><span class="p">,</span> <span class="n">default</span><span class="o">=</span><span class="mi">1</span><span class="p">)</span>

    <span class="c1"># gather arguments
</span>    <span class="n">args</span> <span class="o">=</span> <span class="n">parser</span><span class="p">.</span><span class="n">parse_args</span><span class="p">()</span>
    <span class="n">length</span> <span class="o">=</span> <span class="n">args</span><span class="p">.</span><span class="n">length</span>
    <span class="n">numbers</span> <span class="o">=</span> <span class="n">args</span><span class="p">.</span><span class="n">numbers</span>
    <span class="n">alpha</span> <span class="o">=</span> <span class="n">args</span><span class="p">.</span><span class="n">alpha</span>
    <span class="n">punctuation</span> <span class="o">=</span> <span class="n">args</span><span class="p">.</span><span class="n">punctuation</span>
    <span class="n">count</span> <span class="o">=</span> <span class="n">args</span><span class="p">.</span><span class="n">count</span>
</code></pre></div></div>

<p>With the addition of the arguments, we added command line arguments for length, numbers, alpha, punctuation, and how many passwords to create.</p>

<p>We will print some pretty lines to the console too</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code>    <span class="c1"># add our choices together to then print them in the result. 
</span>    <span class="n">choices</span> <span class="o">=</span> <span class="s">""</span>
    <span class="k">if</span> <span class="n">numbers</span><span class="p">:</span>
        <span class="n">choices</span> <span class="o">+=</span> <span class="s">" numbers"</span>
    
    <span class="k">if</span> <span class="n">alpha</span><span class="p">:</span>
        <span class="n">choices</span> <span class="o">+=</span> <span class="s">" letters"</span>
    
    <span class="k">if</span> <span class="n">punctuation</span><span class="p">:</span>
        <span class="n">choices</span> <span class="o">+=</span> <span class="s">" special characters"</span>

    <span class="k">if</span> <span class="n">choices</span> <span class="o">==</span> <span class="s">""</span><span class="p">:</span>
        <span class="n">choices</span> <span class="o">=</span> <span class="s">" numbers, letters, and special characters"</span>

    <span class="c1"># print line stating the number or random strings, the length and the choices of the password
</span>    <span class="k">print</span><span class="p">(</span><span class="sa">f</span><span class="s">"Generating </span><span class="si">{</span><span class="n">count</span><span class="si">}</span><span class="s"> Random String password of </span><span class="si">{</span><span class="n">length</span><span class="si">}</span><span class="s"> characters with</span><span class="si">{</span><span class="n">choices</span><span class="si">}</span><span class="s">"</span><span class="p">)</span>
    <span class="c1"># get the 'count' and for make a new password until the count is finished
</span></code></pre></div></div>

<p>Next we need to handle the number of passwords the user wants.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code>    <span class="k">for</span> <span class="n">x</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="n">count</span><span class="p">):</span>
        <span class="c1"># start x at 1 then add 1 to x
</span>        <span class="n">x</span> <span class="o">+=</span> <span class="mi">1</span>
        <span class="c1"># generate the password
</span>        <span class="n">password</span> <span class="o">=</span> <span class="n">randPass</span><span class="p">(</span><span class="n">length</span><span class="p">,</span> <span class="n">numbers</span><span class="p">,</span> <span class="n">alpha</span><span class="p">,</span> <span class="n">punctuation</span><span class="p">)</span>
        <span class="c1"># output the password to the screen
</span>        <span class="k">print</span><span class="p">(</span><span class="sa">f</span><span class="s">"</span><span class="si">{</span><span class="n">x</span><span class="si">}</span><span class="s"> : </span><span class="si">{</span><span class="n">password</span><span class="si">}</span><span class="s">"</span><span class="p">)</span>
</code></pre></div></div>

<p>Once completed we can now run our script in the console. With no arguments we will create a random string with 14 characters as in our default length argument and the characters would be all possible string options.</p>

<div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">&gt;</span> python randpass.py

Generating 1 Random String password of 14 characters with
1 : <span class="nt">-k1b</span>.boKDy%I&lt;Q
</code></pre></div></div>

<h2 id="how-to-use-the-arguments">How to use the arguments</h2>

<p>By default Argparse generates a great -h or help command.</p>

<div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">&gt;</span> python randpass.py <span class="nt">-h</span>

usage: randpass.py <span class="o">[</span><span class="nt">-h</span><span class="o">]</span> <span class="o">[</span><span class="nt">-l</span> LENGTH] <span class="o">[</span><span class="nt">-n</span><span class="o">]</span> <span class="o">[</span><span class="nt">-a</span><span class="o">]</span> <span class="o">[</span><span class="nt">-p</span><span class="o">]</span> <span class="o">[</span><span class="nt">-c</span> COUNT]

Random Password Generator

optional arguments:
  <span class="nt">-h</span>, <span class="nt">--help</span>            show this <span class="nb">help </span>message and <span class="nb">exit</span>
  <span class="nt">-l</span> LENGTH, <span class="nt">--length</span> LENGTH
                        Length of password <span class="k">in </span>integer, default is 14
  <span class="nt">-n</span>, <span class="nt">--numbers</span>         Add numbers to password
  <span class="nt">-a</span>, <span class="nt">--alpha</span>           Add mixed <span class="k">case</span> alpha characters to password
  <span class="nt">-p</span>, <span class="nt">--punctuation</span>     Add punctuation characters to password
  <span class="nt">-c</span> COUNT, <span class="nt">--count</span> COUNT
                        Number of passwords to generate
</code></pre></div></div>

<p>With the arguments in the script we can create a password with the characters, numbers, punctuation, and the number of passwords to make.</p>

<p>Lets create 5 passwords with a length of 20 and use alpha characters and numbers.</p>

<div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">&gt;</span> python randpass.py <span class="nt">-l</span> 20 <span class="nt">-a</span> <span class="nt">-n</span> <span class="nt">-c</span> 5

Generating 5 Random String password of 20 characters with numbers letters
1 : jSzLlvxT3ExvRbzQErav
2 : ap04tS5sMyg1wnrwUHz5
3 : lH44j5M7kZla9YqtoU1U
4 : HauT0Uz7aEYkVAEYKeP2
5 : 6dwv7ncmBNAbZmUD3T6o
</code></pre></div></div>
:ET